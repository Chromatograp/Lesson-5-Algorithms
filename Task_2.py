from collections import deque
from itertools import chain
from itertools import zip_longest

print('Задание 2.')

# 2. Написать программу сложения и умножения двух шестнадцатеричных чисел. При этом каждое число представляется
# как массив, элементы которого — цифры числа. Например, пользователь ввёл A2 и C4F. Нужно сохранить их как
# [‘A’, ‘2’] и [‘C’, ‘4’, ‘F’] соответственно. Сумма чисел из примера: [‘C’, ‘F’, ‘1’], произведение -
# [‘7’, ‘C’, ‘9’, ‘F’, ‘E’]. Примечание: Если воспользоваться функциями hex() и/или int() для преобразования
# систем счисления, задача решается в несколько строк. Для прокачки алгоритмического мышления такой вариант не
# подходит. Поэтому использование встроенных функций для перевода из одной системы счисления в другую в данной задаче
# под запретом. Вспомните начальную школу и попробуйте написать сложение и умножение в столбик.

n = [int(i) for i in input('Введите два числа: ').split()]
# Переводим десятичные числа в шестнадцатеричный формат, разбиваем на цифры при помощи "очереди" и преобразуем в
# список:
hex = [list(deque("{0:x}".format(x))) for x in n]

# Разбиваем два вложенных списка на два отдельных списка:
hex1 = []
hex2 = []

hex1.append(hex[0])
hex2.append(hex[1])

# Вычисляем сумму и произведение полученных списков поэлементно:
summa = [int(x, 16) + int(y, 16) for x, y in zip_longest(*hex1, *hex2, fillvalue=0)]
mult = [int(x, 16) * int(y, 16) for x, y in zip_longest(*hex1, *hex2, fillvalue=0)]

print(f'Цифры ваших чисел в шестнадцатеричном формате: {hex}')
print(f'Сумма цифр ваших чисел в шестнадцатеричном формате: {summa}')
print(f'Произведение цифр ваших чисел в шестнадцатеричном формате: {mult}')

